// bot handler


//  Welcome handler
response = Map();
// newuser is 
a boolean which defines whether the user is a first time subscriber or not!
if(newuser)
{
	response.put("text","Hey *" + user.get("first_name") + "* ! Thanks for adding me");
}
else
{
	response.put("text","I'm Backkkkk! :wink:");
}
return response;
// Message handler
response = Map();
if(message.containsIgnoreCase("HI") || message.containsIgnoreCase("HEY"))
{
	text = "Hi! How you doin'? :wink:";
	response.put("suggestions",{"list":{{"text":"enaa da"},{"text":"Active Status"}}});
	messageDetails = input.message;
	// Extract the chat ID from the received message
	// Now 'chatId' contains the ID of the chat where the bot received the message
	info messageDetails;
	xy = zoho.cliq.postToChat(1,"heleo");
}
else if(message.equals("Latest Deployment"))
{
	text = "poda";
}
else if(message.equals("Active Status"))
{
	text = "alkdsfjsdklfj:";
}
else if(message.containsIgnoreCase("ticket"))
{
	//Try this case with the context handler. 
	text = "Welcome to the Zylker Ticket Booking Portal! I'll need a few details to book the ticket.";
	context = {"id":"personal_details","timeout":"300","params":{{"name":"name","question":"Please enter your name."},{"name":"age","question":"How old are you? :smile:"},{"name":"sex","question":"Gender:","suggestions":{"list":{{"text":"Male"},{"text":"Female"}}}}}};
	response.put("context",context);
}
else
{
	text = "Messaging me for the first time? Come say a Hi ! :grinning:";
}
response.put("text",text);
response = Map();
response.put("text","See your Deployment status Here!");
bot = Map();
bot.put("name","Vercel");
response.put("bot",bot);
card = Map();
card.put("title","Vercel Bot");
card.put("theme","modern-inline");
response.put("card",card);
buttonsList = list();
buttonsList0 = Map();
buttonsList0.put("label","Current Deployment");
action = Map();
action.put("type","open.url");
data = Map();
data.put("web","https://cliq.zoho.com");
action.put("data",data);
buttonsList0.put("action",action);
buttonsList.add(buttonsList0);
buttonsList1 = Map();
buttonsList1.put("label","Previour Deployment");
action = Map();
action.put("type","open.url");
data = Map();
data.put("web","https://cliq.zoho.com");
action.put("data",data);
buttonsList1.put("action",action);
buttonsList.add(buttonsList1);
response.put("buttons",buttonsList);
slidesList = list();
slidesList0 = Map();
slidesList0.put("type","table");
slidesList0.put("title","Deployments");
buttonsList = list();
buttonsList0 = Map();
buttonsList0.put("label","Button 1");
action = Map();
action.put("type","open.url");
data = Map();
data.put("web","https://cliq.zoho.com");
action.put("data",data);
buttonsList0.put("action",action);
buttonsList.add(buttonsList0);
slidesList0.put("buttons",buttonsList);
data = Map();
headersList = list();
headersList.add("Header 0");
headersList.add("Header 1");
headersList.add("Header 2");
data.put("headers",headersList);
rowsList = list();
rowsList0 = Map();
rowsList0.put("Header 0","Zoho1");
rowsList0.put("Header 1","Org1");
rowsList0.put("Header 2","head1");
rowsList.add(rowsList0);
rowsList1 = Map();
rowsList1.put("Header 0","zoho2");
rowsList1.put("Header 1","Org2");
rowsList1.put("Header 2","head2");
rowsList.add(rowsList1);
data.put("rows",rowsList);
slidesList0.put("data",data);
slidesList.add(slidesList0);
response.put("slides",slidesList);
return response;



// Slash Command

info "Vercel";
endpointUrl = "https://api.vercel.com/v6/deployments";
requestParams = Map();
requestParams.put("teamId","team_Db2XQGTUtAc8mAd56BvgkWGR");
accessToken = "1SYYqCiatFFvsEBbA8G5pWqg";
header = Map();
header.put("Authorization","Bearer " + accessToken);
response = invokeurl
[
	url :endpointUrl
	type :GET
	parameters:requestParams
	headers:header
];
deployment = response.get("deployments");
jsonList = toJSONList(deployment);
first = jsonList.get(0);
url = first.get("url");
info url;
card = Map();
message = Map();
card.put("title","latest deployment url");
card.put("thumbnail","");
message.put("card",card);
message.put("text",url);
return message;


// 	Get Projects
endpointUrl = BASEURL + "v9/projects";
headers = Map();
headers.put("Authorization","Bearer " + ACCESS_TOKEN);

res = invokeUrl
[
	url: endpointUrl
	type: GET
	headers: headers
	connection:"vercel"
];


projects = toJSONList(res.get("projects"));

filtered = Collection();

for each  project in projects
{

	pr = {
		"name": project.get("name"),
		"id": project.get("id")
		"repo": project.get("link").get("org")+ "/" + project.get("link").get("repo"),
		"org": project.get("link").get("org"),
		"prod": project.get("targets").get("production").get("url"),
	};

    filtered.add(pr);


}

return filtered;

// Sample json
{
            "accountId": "jx844PbSb4fRO4DJovVtdI0r",
            "autoExposeSystemEnvs": true,
            "autoAssignCustomDomains": true,
            "autoAssignCustomDomainsUpdatedBy": "system",
            "buildCommand": null,
            "createdAt": 1700630061675,
            "crons": {
                "enabledAt": 1700630066883,
                "disabledAt": null,
                "updatedAt": 1700630066883,
                "deploymentId": "dpl_7x6psxgiEQzdAMdxjWPDviF2VbJr",
                "definitions": []
            },
            "devCommand": null,
            "directoryListing": false,
            "env": [],
            "framework": null,
            "gitForkProtection": true,
            "gitLFS": false,
            "id": "prj_EsZ9oyyMOezJl9kU3KYDrpi0U9oI",
            "installCommand": null,
            "lastRollbackTarget": null,
            "lastAliasRequest": null,
            "name": "shortlink",
            "nodeVersion": "18.x",
            "outputDirectory": null,
            "publicSource": null,
            "rootDirectory": null,
            "serverlessFunctionRegion": "iad1",
            "sourceFilesOutsideRootDirectory": true,
            "ssoProtection": {
                "deploymentType": "prod_deployment_urls_and_all_previews"
            },
            "updatedAt": 1700630066883,
            "live": false,
            "gitComments": {
                "onCommit": false,
                "onPullRequest": true
            },
            "link": {
                "type": "github",
                "repo": "clipboard",
                "repoId": 627858186,
                "org": "aviiciii",
                "gitCredentialId": "cred_dc1d4c2cfbfed2d7db2cd0e7b7bda6fc0597b458",
                "productionBranch": "main",
                "sourceless": true,
                "createdAt": 1700630061533,
                "updatedAt": 1700630061533,
                "deployHooks": []
            },
            "latestDeployments": [
                {
                    "alias": [
                        "shortlink-iota.vercel.app",
                        "shortlink-aviiciii.vercel.app",
                        "shortlink-git-main-aviiciii.vercel.app"
                    ],
                    "aliasAssigned": 1700630067021,
                    "aliasError": null,
                    "automaticAliases": [
                        "shortlink-aviiciii.vercel.app",
                        "shortlink-git-main-aviiciii.vercel.app"
                    ],
                    "builds": [],
                    "createdAt": 1700630063003,
                    "createdIn": "sfo1",
                    "creator": {
                        "uid": "jx844PbSb4fRO4DJovVtdI0r",
                        "email": "laavesh1@gmail.com",
                        "username": "aviiciii",
                        "githubLogin": "aviiciii"
                    },
                    "deploymentHostname": "shortlink-cjn7ulvek-aviiciii",
                    "forced": false,
                    "id": "dpl_7x6psxgiEQzdAMdxjWPDviF2VbJr",
                    "meta": {
                        "githubCommitAuthorName": "aviiciii",
                        "githubCommitMessage": "removed ip whitelisting",
                        "githubCommitOrg": "aviiciii",
                        "githubCommitRef": "main",
                        "githubCommitRepo": "clipboard",
                        "githubCommitSha": "644d3ca069239103da65a745ba536f83669ecc92",
                        "githubDeployment": "1",
                        "githubOrg": "aviiciii",
                        "githubRepo": "clipboard",
                        "githubRepoOwnerType": "User",
                        "githubCommitRepoId": "627858186",
                        "githubRepoId": "627858186",
                        "githubRepoVisibility": "public",
                        "githubCommitAuthorLogin": "aviiciii",
                        "branchAlias": "shortlink-git-main-aviiciii.vercel.app"
                    },
                    "name": "shortlink",
                    "plan": "hobby",
                    "private": true,
                    "readyState": "READY",
                    "readySubstate": "PROMOTED",
                    "target": "production",
                    "teamId": null,
                    "type": "LAMBDAS",
                    "url": "shortlink-cjn7ulvek-aviiciii.vercel.app",
                    "userId": "jx844PbSb4fRO4DJovVtdI0r",
                    "withCache": false,
                    "buildingAt": 1700630064517,
                    "readyAt": 1700630066532,
                    "previewCommentsEnabled": true
                }
            ],
            "targets": {
                "production": {
                    "alias": [
                        "shortlink-iota.vercel.app",
                        "shortlink-aviiciii.vercel.app",
                        "shortlink-git-main-aviiciii.vercel.app"
                    ],
                    "aliasAssigned": 1700630067021,
                    "aliasError": null,
                    "automaticAliases": [
                        "shortlink-aviiciii.vercel.app",
                        "shortlink-git-main-aviiciii.vercel.app"
                    ],
                    "builds": [],
                    "createdAt": 1700630063003,
                    "createdIn": "sfo1",
                    "creator": {
                        "uid": "jx844PbSb4fRO4DJovVtdI0r",
                        "email": "laavesh1@gmail.com",
                        "username": "aviiciii",
                        "githubLogin": "aviiciii"
                    },
                    "deploymentHostname": "shortlink-cjn7ulvek-aviiciii",
                    "forced": false,
                    "id": "dpl_7x6psxgiEQzdAMdxjWPDviF2VbJr",
                    "meta": {
                        "githubCommitAuthorName": "aviiciii",
                        "githubCommitMessage": "removed ip whitelisting",
                        "githubCommitOrg": "aviiciii",
                        "githubCommitRef": "main",
                        "githubCommitRepo": "clipboard",
                        "githubCommitSha": "644d3ca069239103da65a745ba536f83669ecc92",
                        "githubDeployment": "1",
                        "githubOrg": "aviiciii",
                        "githubRepo": "clipboard",
                        "githubRepoOwnerType": "User",
                        "githubCommitRepoId": "627858186",
                        "githubRepoId": "627858186",
                        "githubRepoVisibility": "public",
                        "githubCommitAuthorLogin": "aviiciii",
                        "branchAlias": "shortlink-git-main-aviiciii.vercel.app"
                    },
                    "name": "shortlink",
                    "plan": "hobby",
                    "private": true,
                    "readyState": "READY",
                    "readySubstate": "PROMOTED",
                    "target": "production",
                    "teamId": null,
                    "type": "LAMBDAS",
                    "url": "shortlink-cjn7ulvek-aviiciii.vercel.app",
                    "userId": "jx844PbSb4fRO4DJovVtdI0r",
                    "withCache": false,
                    "buildingAt": 1700630064517,
                    "readyAt": 1700630066532,
                    "previewCommentsEnabled": true
                }
            }
        },