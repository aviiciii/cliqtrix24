// --------XX DEFAULT CODE XX--------
// Constants
BASEURL = "https://api.vercel.com/";
userFirstName = user.get("first_name");
userEmail = user.get("email");
userid = user.get("id");
response = Map();

// Get API KEY
query_map = Map();
query_map.put("criteria","userid==" + userid);
response_map = zoho.cliq.getRecords("verceldb",query_map);
if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
{
	ACCESS_TOKEN = response_map.get("list").get(0).get("apikey");
	headers = Map();
	headers.put("Authorization","Bearer " + ACCESS_TOKEN);
}
else{
	response.put("text", "Please add your API Key first. Use the command `saveapi` to add your API Key.");
	return response;
}
// --------XX DEFAULT CODE XX--------

team_id = arguments.get("key");

if (team_id != null)
{
    endpointUrl = BASEURL + "v6/deployments" + "?teamId=" + team_id;
}
else
{
    endpointUrl = BASEURL + "v6/deployments";
}


headers = Map();
headers.put("Authorization","Bearer " + ACCESS_TOKEN);
res = invokeurl
[
	url :endpointUrl
	type :GET
	headers:headers

];
deployments = toJSONList(res.get("deployments"));
	rows = Collection();
	for each  deployment in deployments
	{
		if(deployment.get("target") == null)
		{
			type = "PR Preview";
		}
		else
		{
			type = "Production";
		}
		// check if project is deployed
		if(deployment.get("inspectorUrl") == null)
		{
			row = {"name":deployment.get("name"),"type":type,"inspect":"N/A","url":deployment.get("url"),"id":deployment.get("uid")};
		}
		// if deployed then add to deployed list
		else
		{
			row = {"name":deployment.get("name"),"type":type,"inspect":deployment.get("inspectorUrl"),"url":deployment.get("url"),"id":deployment.get("uid")};
		}
		rows.add(row);
	}
	// TABLE
	response = Map();
	response.put("text","Hey, " + userFirstName + "!");
	bot = Map();
	bot.put("name","Vercel");
	response.put("bot",bot);
	card = Map();
	card.put("title","Deployments");
	card.put("theme","modern-inline");
	response.put("card",card);
	// create table
	slidesList = list();
	slidesList0 = Map();
	slidesList0.put("type","table");
	slidesList0.put("title","Your Deployments:");
	data = Map();
	headersList = list();
	headersList.add("Project");
	headersList.add("Type");
	headersList.add("Preview");
	headersList.add("Details");
	headersList.add("Vercel");
	data.put("headers",headersList);
	rowsList = list();
	for each  row in rows
	{
		rowsList0 = Map();
		rowsList0.put("Project",row.get("name"));
		rowsList0.put("Type",row.get("type"));
		rowsList0.put("Preview","[View](https://" + row.get("url") + ")");
		temp = "[+Show](invoke.function|getdeployment|" + userEmail + "|" + row.get("id") + ")";
		rowsList0.put("Details",temp);
		
		rowsList0.put("Vercel","[Open](" + row.get("inspect") + ")");
		rowsList.add(rowsList0);
	}
	data.put("rows",rowsList);
	slidesList0.put("data",data);
	slidesList.add(slidesList0);
	response.put("slides",slidesList);
	return response;