// --------XX DEFAULT CODE XX--------
// Constants
BASEURL = "https://api.vercel.com/";
userFirstName = user.get("first_name");
userEmail = user.get("email");
userid = user.get("id");
response = Map();

// Get API KEY
query_map = Map();
query_map.put("criteria","userid==" + userid);
response_map = zoho.cliq.getRecords("verceldb",query_map);
if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
{
	ACCESS_TOKEN = response_map.get("list").get(0).get("apikey");
	headers = Map();
	headers.put("Authorization","Bearer " + ACCESS_TOKEN);
}
else{
	form = {"type":"form","title":"Vercel API Key","name":"apikey","hint":"Add your API Key from Vercel to use this extension","button_label":"Submit","inputs":{{"name":"apikey","label":"API Key","placeholder":"Enter your Vercel API Key here","min_length":"0","max_length":"36","mandatory":true,"type":"text"}},"action":{"type":"invoke.function","name":"saveApiKey"}};
	return form;
}
// --------XX DEFAULT CODE XX--------

if(selections.size() >0 ){
	details = selections.get(0).toMap();
	if(details.get("title").containsIgnoreCase("Projects")){

        // query data
        query_map = Map();
        criteria_string = "userid==" + userid;
        query_map.put("criteria",criteria_string);
        response_map = zoho.cliq.getRecords("verceldb",query_map);
        record_id = 0;
        // get team id	
        team_id = null;
        if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
        {
            team_id = response_map.get("list").get(0).get("teamid");
            if(team_id == "personal")
            {
                team_id = null;
            }
        }
        // 	Get Projects
        endpointUrl = BASEURL + "v9/projects";
        if(team_id != null)
        {
            endpointUrl = endpointUrl + "?teamId=" + team_id;
        }
        headers = Map();
        headers.put("Authorization","Bearer " + ACCESS_TOKEN);
        res = invokeurl
        [
            url :endpointUrl
            type :GET
            headers:headers
            connection:"vercel"
        ];
        projects = toJSONList(res.get("projects"));
        rows = Collection();
        for each  project in projects
        {
            // check if project is deployed
            if(project.get("targets").get("production").get("alias") == null)
            {
                // if deployed then add to deployed list
                row = {"name":project.get("name"),"owner":project.get("link").get("org"),"id":project.get("id"),"repo":project.get("link").get("org") + "/" + project.get("link").get("repo"),"prod":"N/A","url":"https://vercel.com/" + project.get("link").get("org") + "/" + project.get("link").get("repo")};
            }
            // if deployed then add to deployed list
            else
            {
                row = {"name":project.get("name"),"owner":project.get("link").get("org"),"id":project.get("id"),"repo":project.get("link").get("org") + "/" + project.get("link").get("repo"),"prod":project.get("targets").get("production").get("url"),"url":"https://vercel.com/" + project.get("link").get("org") + "/" + project.get("link").get("repo")};
                rows.add(row);
            }
        }
        // find if project is deployed
        no_of_deployed = 0;
        for each  row in rows
        {
            if(row.get("prod") != "N/A")
            {
                no_of_deployed = no_of_deployed + 1;
            }
        }
        // TABLE
        response = Map();
        response.put("text","Hey, " + userFirstName + "!");
        bot = Map();
        bot.put("name","Vercel");
        response.put("bot",bot);
        card = Map();
        card.put("title","Welcome to project section");
        card.put("theme","modern-inline");
        response.put("card",card);
        slidesList = list();
        slidesList0 = Map();
        slidesList0.put("type","table");
        slidesList0.put("title","Your Projects");
        buttonsList = list();
        buttonsList0 = Map();
        buttonsList0.put("label","Open Vercel");
        action = Map();
        action.put("type","open.url");
        data = Map();
        data.put("web","https://vercel.com/dashboard");
        action.put("data",data);
        buttonsList0.put("action",action);
        buttonsList.add(buttonsList0);
        slidesList0.put("buttons",buttonsList);
        data = Map();
        headersList = list();
        headersList.add("Project");
        headersList.add("Owner");
        headersList.add("Deployment");
        headersList.add("Vercel");
        data.put("headers",headersList);
        rowsList = list();
        for each  row in rows
        {
            rowsList0 = Map();
            rowsList0.put("Project",row.get("name"));
            rowsList0.put("Owner",row.get("owner"));

            rowsList0.put("Deployment","[View](" + "https://" + row.get("prod") + ")");
            rowsList0.put("Vercel","[Open]("+row.get("url")+ ")");
            rowsList.add(rowsList0);
        }
        data.put("rows",rowsList);
        slidesList0.put("data",data);
        slidesList.add(slidesList0);
        slidesList1 = Map();
        slidesList1.put("type","text");
        slidesList1.put("title","Summary");
        slidesList1.put("data","Deployed: " + no_of_deployed + "\nTotal: " + no_of_deployed + "\n");
        slidesList.add(slidesList1);
        response.put("slides",slidesList);
        response.put("slides",slidesList);
	}
	else if(details.get("title").containsIgnoreCase("Deployments")){
	

        // 	Get Deployemnts
        // query data
        query_map = Map();
        criteria_string = "userid==" + userid;
        query_map.put("criteria",criteria_string);
        response_map = zoho.cliq.getRecords("verceldb",query_map);
        record_id = 0;
        // get team id	
        team_id = null;
        if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
        {
            team_id = response_map.get("list").get(0).get("teamid");
            if(team_id == "personal")
            {
                team_id = null;
            }
        }
        endpointUrl = BASEURL + "v6/deployments";
        if(team_id != null)
        {
            endpointUrl = endpointUrl + "?teamId=" + team_id;
        }
        headers = Map();
        headers.put("Authorization","Bearer " + ACCESS_TOKEN);
        res = invokeurl
        [
            url :endpointUrl
            type :GET
            headers:headers
            connection:"vercel"
        ];
        deployments = toJSONList(res.get("deployments"));
        rows = Collection();
        for each  deployment in deployments
        {
            if(deployment.get("target") == null)
            {
                type = "PR Preview";
            }
            else
            {
                type = "Production";
            }
            // check if project is deployed
            if(deployment.get("inspectorUrl") == null)
            {
                row = {"name":deployment.get("name"),"type":type,"inspect":"N/A","url":deployment.get("url"),"id":deployment.get("uid")};
            }
            // if deployed then add to deployed list
            else
            {
                row = {"name":deployment.get("name"),"type":type,"inspect":deployment.get("inspectorUrl"),"url":deployment.get("url"),"id":deployment.get("uid")};
            }
            rows.add(row);
        }
        // TABLE
        response = Map();
        response.put("text","Hey, " + userFirstName + "!");
        bot = Map();
        bot.put("name","Vercel");
        response.put("bot",bot);
        card = Map();
        card.put("title","Deployments");
        card.put("theme","modern-inline");
        response.put("card",card);
        // create table
        slidesList = list();
        slidesList0 = Map();
        slidesList0.put("type","table");
        slidesList0.put("title","Your Deployments");
        data = Map();
        headersList = list();
        headersList.add("Project");
        headersList.add("Type");
        headersList.add("Preview");
        headersList.add("Details");
        headersList.add("Testing");
        data.put("headers",headersList);
        rowsList = list();
        for each  row in rows
        {
            rowsList0 = Map();
            rowsList0.put("Project",row.get("name"));
            rowsList0.put("Type",row.get("type"));
            rowsList0.put("Preview","[View](https://" + row.get("url") + ")");
            temp = "[+Show](invoke.function|getdeployment|" + userEmail + "|" + row.get("id") + ")";
            rowsList0.put("Details",temp);
            
            rowsList0.put("Testing","[Open](" + row.get("inspect") + ")");
            rowsList.add(rowsList0);
        }
        data.put("rows",rowsList);
        slidesList0.put("data",data);
        slidesList.add(slidesList0);
        response.put("slides",slidesList);
    }
	else{
        response.put("text","Hey, " + userFirstName + "!");
	}
}
else
	{
        response.put("text","Hey, " + userFirstName + "!");
	}
return response;